### Frontend:
  Creator : 
    'create-party' : 
      emit: creates storage for new list, storing access token, partyName, etc...
      {
        partyName : string,
        accessToken : string
      }
  
  Joiner :
    'join-party' : 
      emit : send partyName and ask backend to put socket into socket.room(partyName)
      on : get current party with accessTocken and all require front-end stuff for joiner
    'add-song' :
      emit : {spotifyTrackObject}
    'up-vote' :
      emit : send song.id
    'update' :
      on : setStore(obj)

### Backend:
  'disconnect' : if party is finished

  Creator : 
    'create-party' :
      on : create socket.io room, writeFile( 'newParty.json' ), store accessToken, queue ...
  
  Joiner :
    'join-party' :
      on : socket.join(partyName)
      in(partyName).emit : send back party list with access tokens and all..
    'add-song' :
      on : add song to party list
    'up-vote' :
      on : change vote for particular song
    'update' :
      emit : send any kind of change (song added or upVote change)


little iffy about join-party, cause it might cause all already connected users to have blank playlists
  

